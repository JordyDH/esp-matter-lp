# Copyright 2025 The Pigweed Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

load("@rules_rust//rust:defs.bzl", "rust_library")

package(default_visibility = ["//visibility:public"])

CORTEX_M_DEPS = [
    "@rust_crates//:cortex-m",
    "@rust_crates//:cortex-m-rt",
]

RISCV_DEPS = [
    "@rust_crates//:riscv",
    "@rust_crates//:riscv-rt",
]

rust_library(
    name = "kernel",
    srcs = [
        "arch.rs",
        "arch/arm_cortex_m.rs",
        "arch/arm_cortex_m/exceptions.rs",
        "arch/arm_cortex_m/features.rs",
        "arch/arm_cortex_m/regs.rs",
        "arch/arm_cortex_m/regs/mpu.rs",
        "arch/arm_cortex_m/regs/nvic.rs",
        "arch/arm_cortex_m/regs/systick.rs",
        "arch/arm_cortex_m/spinlock.rs",
        "arch/arm_cortex_m/threads.rs",
        "arch/arm_cortex_m/timer.rs",
        "arch/host.rs",
        "arch/host/spinlock.rs",
        "arch/riscv.rs",
        "arch/riscv/exceptions.rs",
        "arch/riscv/spinlock.rs",
        "arch/riscv/threads.rs",
        "arch/riscv/timer.rs",
        "lib.rs",
        "panic.rs",
        "scheduler.rs",
        "scheduler/locks.rs",
        "sync.rs",
        "sync/mutex.rs",
        "sync/spinlock.rs",
        "target.rs",
        "timer.rs",
    ],
    crate_features = select({
        "@pigweed//pw_build/constraints/arm:cortex-m0": ["arch_arm_cortex_m"],
        "@pigweed//pw_build/constraints/arm:cortex-m3": ["arch_arm_cortex_m"],
        "@pigweed//pw_build/constraints/arm:cortex-m33": ["arch_arm_cortex_m"],
        "@platforms//cpu:riscv32": ["arch_riscv"],
        "//conditions:default": [
            "arch_host",
            "std_panic_handler",
        ],
    }),
    proc_macro_deps = ["@rust_crates//:paste"],
    tags = ["kernel"],
    deps = [
        "//pw_kernel/lib/foreign_box",
        "//pw_kernel/lib/list",
        "//pw_kernel/lib/log_if",
        "//pw_kernel/lib/pw_assert",
        "//pw_kernel/lib/pw_status",
        "//pw_kernel/lib/regs",
        "//pw_kernel/lib/time",
        "@pigweed//pw_log/rust:pw_log",
    ] + select({
        "@pigweed//pw_build/constraints/arm:cortex-m0": CORTEX_M_DEPS,
        "@pigweed//pw_build/constraints/arm:cortex-m3": CORTEX_M_DEPS,
        "@pigweed//pw_build/constraints/arm:cortex-m33": CORTEX_M_DEPS,
        "@platforms//cpu:riscv32": RISCV_DEPS,
        "//conditions:default": [],
    }),
)
